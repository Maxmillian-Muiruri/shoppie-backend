generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  role      UserRole   @default(CUSTOMER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cartItems CartItem[]
  orders    Order[]
  resetPasswordCode        String?   // For password reset
  resetPasswordCodeExpiry  DateTime? // Expiry for reset code
}

model Product {
  id               String      @id @default(uuid())
  name             String
  shortDescription String
  price            Float
  image            String
  stockQuantity    Int
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  cartItems        CartItem[]
  orderItems       OrderItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  userId    String
  productId String
  quantity  Int
  addedAt   DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Order {
  id              String      @id @default(uuid())
  userId          String
  status          OrderStatus @default(PENDING)
  totalAmount     Float
  shippingAddress String
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  user            User        @relation(fields: [userId], references: [id])
  orderItems      OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

enum UserRole {
  CUSTOMER
  ADMIN
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}
