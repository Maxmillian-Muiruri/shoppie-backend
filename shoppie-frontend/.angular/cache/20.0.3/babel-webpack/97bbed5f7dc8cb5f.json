{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Validators } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nlet ProductFormComponent = class ProductFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.product = null;\n    this.submitProduct = new EventEmitter();\n    this.imagePreview = null;\n    this.imageFile = null;\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      price: [0, [Validators.required, Validators.min(0)]],\n      stockQuantity: [0, [Validators.required, Validators.min(0)]],\n      imageUrl: ['']\n    });\n  }\n  ngOnChanges() {\n    if (this.product) {\n      this.productForm.patchValue(this.product);\n      this.imagePreview = this.product.imageUrl || null;\n    }\n  }\n  onImageChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      this.imageFile = file;\n      const reader = new FileReader();\n      reader.onload = e => this.imagePreview = reader.result;\n      reader.readAsDataURL(file);\n    }\n  }\n  onSubmit() {\n    if (this.productForm.invalid) return;\n    const formValue = {\n      ...this.productForm.value\n    };\n    if (this.imageFile) {\n      formValue.imageFile = this.imageFile;\n    }\n    this.submitProduct.emit(formValue);\n  }\n};\n__decorate([Input()], ProductFormComponent.prototype, \"product\", void 0);\n__decorate([Output()], ProductFormComponent.prototype, \"submitProduct\", void 0);\nProductFormComponent = __decorate([Component({\n  selector: 'app-product-form',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})], ProductFormComponent);\nexport { ProductFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}