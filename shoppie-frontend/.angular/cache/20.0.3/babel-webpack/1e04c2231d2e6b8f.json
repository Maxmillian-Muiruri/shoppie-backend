{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"../../services/user.service\";\nexport let ProfileComponent = /*#__PURE__*/(() => {\n  class ProfileComponent {\n    constructor(fb, authService, userService) {\n      this.fb = fb;\n      this.authService = authService;\n      this.userService = userService;\n      this.user = null;\n      this.loading = false;\n      this.error = '';\n      this.success = '';\n      this.profileForm = this.fb.group({\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', [Validators.required, Validators.email]]\n      });\n    }\n    ngOnInit() {\n      this.fetchUserProfile();\n    }\n    fetchUserProfile() {\n      this.loading = true;\n      this.userService.getCurrentUser().subscribe({\n        next: user => {\n          this.user = user;\n          this.profileForm.patchValue({\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email\n          });\n          this.loading = false;\n        },\n        error: err => {\n          this.error = err.error?.message || 'Failed to load profile.';\n          this.loading = false;\n        }\n      });\n    }\n    onSubmit() {\n      if (this.profileForm.invalid) return;\n      this.loading = true;\n      this.error = '';\n      this.success = '';\n      const updateData = this.profileForm.value;\n      this.userService.updateProfile(updateData).subscribe({\n        next: updatedUser => {\n          this.user = updatedUser;\n          this.success = 'Profile updated successfully!';\n          this.loading = false;\n        },\n        error: err => {\n          this.error = err.error?.message || 'Failed to update profile.';\n          this.loading = false;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function ProfileComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.UserService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProfileComponent,\n      selectors: [[\"app-profile\"]],\n      decls: 0,\n      vars: 0,\n      template: function ProfileComponent_Template(rf, ctx) {},\n      dependencies: [CommonModule, ReactiveFormsModule],\n      styles: [\".profile-container[_ngcontent-%COMP%]{max-width:400px;margin:2rem auto;padding:2rem;background:#fff;border-radius:8px;box-shadow:0 2px 8px #00000014}.profile-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:1.5rem}.profile-info[_ngcontent-%COMP%]{margin-bottom:1.5rem}.profile-info[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{margin-bottom:.5rem}button[_ngcontent-%COMP%]{margin:.25rem .5rem .25rem 0;padding:.5rem 1.2rem;border:none;border-radius:4px;background:var(--primary-color);color:#fff;font-size:1rem;font-weight:500;cursor:pointer;transition:background .2s}button[_ngcontent-%COMP%]:hover{background:var(--secondary-color)}.profile-form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{margin-bottom:1rem}.profile-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;margin-bottom:.5rem;font-weight:500}.profile-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;padding:.5rem;border:1px solid #ccc;border-radius:4px;font-size:1rem}.loading[_ngcontent-%COMP%], .error[_ngcontent-%COMP%], .success[_ngcontent-%COMP%]{text-align:center;margin:1rem 0;font-size:1.1rem}.error[_ngcontent-%COMP%]{color:var(--error-color)}.success[_ngcontent-%COMP%]{color:var(--success-color)}\"]\n    });\n  }\n  return ProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}