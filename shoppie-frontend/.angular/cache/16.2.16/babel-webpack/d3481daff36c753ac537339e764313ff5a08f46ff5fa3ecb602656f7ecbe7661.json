{"ast":null,"code":"import { of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nlet AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.apiUrl = 'http://localhost:3000';\n      this.tokenKey = 'shoppie_token';\n    }\n    register(data) {\n      return this.http.post(`${this.apiUrl}/users`, data);\n    }\n    login(data) {\n      return this.http.post(`${this.apiUrl}/auth/login`, data).pipe(tap(res => {\n        if (res && res.accessToken) {\n          localStorage.setItem(this.tokenKey, res.accessToken);\n        }\n      }));\n    }\n    logout() {\n      localStorage.removeItem(this.tokenKey);\n      this.router.navigate(['/login']);\n    }\n    isLoggedIn() {\n      return !!localStorage.getItem(this.tokenKey);\n    }\n    getToken() {\n      return localStorage.getItem(this.tokenKey);\n    }\n    getCurrentUser() {\n      const token = this.getToken();\n      if (!token) return of(null);\n      // Optionally decode JWT or call backend for user info\n      return of(null); // Replace with real implementation\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}